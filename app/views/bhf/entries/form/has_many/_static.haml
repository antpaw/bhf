= reflection_node f, field do
  - ref_objects ||= f.object.send(field.reflection.name)
  %p.empty{class: ('hide' unless ref_objects.blank?)}= t 'bhf.helpers.entry.empty', count: 2
  %ul.relation{class: field.macro}
    - ref_objects.each do |ref_object|
      %li
        - if field.link && ! field.link.hide_edit
          = link_to ref_object.to_bhf_s, edit_entry_path(field.link.name, ref_object), class: 'js_edit_field qe_button quick_edit'
        - else
          = ref_object.to_bhf_s
        - if field.link && ! field.link.hide_delete
          = link_to '&times;'.html_safe, entry_path(field.link.name, ref_object), method: :delete, class: 'qe_delete js_delete', remote: true, data: {confirm: t('bhf.helpers.promts.confirm')}

  - if field.link && ! field.link.hide_create
    = link_to '+', new_entry_path(field.link), class: 'js_add_field plus_button qe_button quick_edit'